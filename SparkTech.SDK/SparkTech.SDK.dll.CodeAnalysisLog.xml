<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Namespaces>
  <Namespace Name="SparkTech.SDK">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SparkTech.SDK' with another namespace.</Issue>
    </Message>
    <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SDK' in namespace name 'SparkTech.SDK' by changing it to 'Sdk'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SparkTech.SDK.Cache">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SparkTech.SDK.Cache' with another namespace.</Issue>
    </Message>
    <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SDK' in namespace name 'SparkTech.SDK.Cache' by changing it to 'Sdk'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SparkTech.SDK.Enumerations">
   <Messages>
    <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SDK' in namespace name 'SparkTech.SDK.Enumerations' by changing it to 'Sdk'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SparkTech.SDK.EventData">
   <Messages>
    <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SDK' in namespace name 'SparkTech.SDK.EventData' by changing it to 'Sdk'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SparkTech.SDK.Executors">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SparkTech.SDK.Executors' with another namespace.</Issue>
    </Message>
    <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SDK' in namespace name 'SparkTech.SDK.Executors' by changing it to 'Sdk'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SparkTech.SDK.MoreLinq">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SparkTech.SDK.MoreLinq' with another namespace.</Issue>
    </Message>
    <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SDK' in namespace name 'SparkTech.SDK.MoreLinq' by changing it to 'Sdk'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SparkTech.SDK.SparkWalking">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SparkTech.SDK.SparkWalking' with another namespace.</Issue>
    </Message>
    <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SDK' in namespace name 'SparkTech.SDK.SparkWalking' by changing it to 'Sdk'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SparkTech.SDK.Utils">
   <Messages>
    <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SDK' in namespace name 'SparkTech.SDK.Utils' by changing it to 'Sdk'.</Issue>
    </Message>
    <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in namespace name 'SparkTech.SDK.Utils'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SparkTech.SDK.Web">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SparkTech.SDK.Web' with another namespace.</Issue>
    </Message>
    <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'SDK' in namespace name 'SparkTech.SDK.Web' by changing it to 'Sdk'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkTech.SDK.dll">
   <Modules>
    <Module Name="sparktech.sdk.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'SparkTech.SDK.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'SDK' in assembly name 'SparkTech.SDK.dll' by changing it to 'Sdk'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'SparkTech.SDK.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'SparkTech.SDK.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="SparkTech.SDK">
       <Types>
        <Type Name="Variables" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="90">In method 'Variables.Variables()', call System.IDisposable.Dispose on object 'new SparkTechUpdater(assemblyName.Version, assemblyName.Name, "SDK")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="EloBuddy.SDK.Menu.Menu.AddGroupLabel(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="113">Method 'Variables.Variables()' passes a literal string as parameter 'text' of a call to 'Menu.AddGroupLabel(string)'. Retrieve the following string(s) from a resource table instead: "Please report any bugs or suggestions at:".</Issue>
            </Message>
            <Message Id="EloBuddy.SDK.Menu.Menu.AddLabel(System.String,System.Int32)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="115">Method 'Variables.Variables()' passes a literal string as parameter 'text' of a call to 'Menu.AddLabel(string, int)'. Retrieve the following string(s) from a resource table instead: "Discord: @spark".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="111">Method 'Variables.Variables()' passes a literal string as parameter 'text' of a call to 'Menu.AddLabel(string, int)'. Retrieve the following string(s) from a resource table instead: "License type: , Pleb, Buddy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="114">Method 'Variables.Variables()' passes a literal string as parameter 'text' of a call to 'Menu.AddLabel(string, int)'. Retrieve the following string(s) from a resource table instead: "Skype: \"wiktorsharp\"".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="110">Method 'Variables.Variables()' passes a literal string as parameter 'text' of a call to 'Menu.AddLabel(string, int)'. Retrieve the following string(s) from a resource table instead: "Welcome, \", \" :)".</Issue>
            </Message>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="66">Initialize all static fields in 'Variables' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
            <Message Id="Pleb" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="111">Correct the spelling of the unrecognized token 'Pleb' in the literal '"Pleb"'.</Issue>
            </Message>
            <Message Id="wiktorsharp" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="114">Correct the spelling of the unrecognized token 'wiktorsharp' in the literal '"Skype: \"wiktorsharp\""'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="110">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Variables.Variables()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK" File="Variables.cs" Line="111">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Variables.Variables()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SDKMenu" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Variables.SDKMenu' or change the field to one that is an immutable reference type. If the reference type 'Menu' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SDK' in member name 'Variables.SDKMenu' by changing it to 'Sdk'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VersionSDK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SDK' in member name 'Variables.VersionSDK' by changing it to 'Sdk'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SparkTech.SDK.Cache">
       <Types>
        <Type Name="EnumCache`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="EnumCache.cs" Line="51">'EnumCache&lt;TEnum&gt;.EnumCache()' creates an exception of type 'InvalidOperationException'. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Issue>
            </Message>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="EnumCache.cs" Line="48">Initialize all static fields in 'EnumCache&lt;TEnum&gt;' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
            <Message Id="TEnum" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="EnumCache.cs" Line="51">Correct the spelling of the unrecognized token 'TEnum' in the literal '"TEnum must be of an enumerable type!"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Count" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'EnumCache&lt;TEnum&gt;.Count' from 'EnumCache&lt;TEnum&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Description(!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="EnumCache.cs" Line="80">Remove 'EnumCache&lt;TEnum&gt;.Description(TEnum)' from 'EnumCache&lt;TEnum&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Names" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'EnumCache&lt;TEnum&gt;.Names' or change the field to one that is an immutable reference type. If the reference type 'List&lt;string&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'EnumCache&lt;TEnum&gt;.Names' from 'EnumCache&lt;TEnum&gt;' or make it an instance member.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'EnumCache&lt;TEnum&gt;.Names' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parse(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="EnumCache.cs" Line="89">Remove 'EnumCache&lt;TEnum&gt;.Parse(string)' from 'EnumCache&lt;TEnum&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Values" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'EnumCache&lt;TEnum&gt;.Values' or change the field to one that is an immutable reference type. If the reference type 'List&lt;TEnum&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'EnumCache&lt;TEnum&gt;.Values' from 'EnumCache&lt;TEnum&gt;' or make it an instance member.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;TEnum&gt;' in 'EnumCache&lt;TEnum&gt;.Values' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MiscallenousCache" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'MiscallenousCache' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MiscallenousCache+ListCache`1" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="MiscallenousCache.cs" Line="24">Initialize all static fields in 'MiscallenousCache.ListCache&lt;T&gt;' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectCache" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="145">Initialize all static fields in 'ObjectCache' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get`1(SparkTech.SDK.Enumerations.ObjectTeam,System.Predicate`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="240">Replace method 'ObjectCache.Get&lt;TGameObject&gt;(ObjectTeam, Predicate&lt;TGameObject&gt;)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="240">Change 'List&lt;TGameObject&gt;' in 'ObjectCache.Get&lt;TGameObject&gt;(ObjectTeam, Predicate&lt;TGameObject&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="inrange" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="240">In method 'ObjectCache.Get&lt;TGameObject&gt;(ObjectTeam, Predicate&lt;TGameObject&gt;)', correct the spelling of 'inrange' in parameter name 'inrange' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMinions(SharpDX.Vector2,System.Single,SparkTech.SDK.Enumerations.ObjectTeam,SparkTech.SDK.Enumerations.MinionType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="326">Replace method 'ObjectCache.GetMinions(Vector2, float, ObjectTeam, MinionType)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="326">Change 'List&lt;Obj_AI_Base&gt;' in 'ObjectCache.GetMinions(Vector2, float, ObjectTeam, MinionType)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMinions(SparkTech.SDK.Enumerations.ObjectTeam,SparkTech.SDK.Enumerations.MinionType,System.Predicate`1&lt;EloBuddy.Obj_AI_Minion&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="300">Replace method 'ObjectCache.GetMinions(ObjectTeam, MinionType, Predicate&lt;Obj_AI_Minion&gt;)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="300">Change 'List&lt;Obj_AI_Minion&gt;' in 'ObjectCache.GetMinions(ObjectTeam, MinionType, Predicate&lt;Obj_AI_Minion&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="inrange" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="300">In method 'ObjectCache.GetMinions(ObjectTeam, MinionType, Predicate&lt;Obj_AI_Minion&gt;)', correct the spelling of 'inrange' in parameter name 'inrange' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNative`1()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="270">Change 'List&lt;TGameObject&gt;' in 'ObjectCache.GetNative&lt;TGameObject&gt;()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MissileClientList" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ObjectCache.MissileClientList' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Obj_AnimatedBuildingList" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ObjectCache.Obj_AnimatedBuildingList' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Player" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ObjectCache.Player' or change the field to one that is an immutable reference type. If the reference type 'AIHeroClient' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Team(EloBuddy.GameObject)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Cache" File="ObjectCache.cs" Line="355">In externally visible method 'ObjectCache.Team(this GameObject)', validate parameter 'object' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SparkTech.SDK.Enumerations">
       <Types>
        <Type Name="MinionType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MinionType' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ObjectTeam" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'ObjectTeam' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Orbwalker" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Orbwalker" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Orbwalker' in type name 'Orbwalker'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SDKOrbwalker" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SDK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SDK' in member name 'Orbwalker.SDKOrbwalker' by changing it to 'Sdk'.</Issue>
            </Message>
            <Message Id="Orbwalker" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Orbwalker' in member name 'Orbwalker.SDKOrbwalker' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SparkTech.SDK.EventData">
       <Types>
        <Type Name="AfterAttackEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(EloBuddy.AttackableUnit)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\EventData" File="AfterAttackEventArgs.cs" Line="21">'AfterAttackEventArgs.AfterAttackEventArgs(AttackableUnit)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Target" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'AfterAttackEventArgs.Target' or change the field to one that is an immutable reference type. If the reference type 'AttackableUnit' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AfterAttackEventArgs.Target' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BeforeOrbwalkerAttack" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Orbwalker" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Orbwalker' in type name 'BeforeOrbwalkerAttack'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'BeforeOrbwalkerAttack' to end in 'EventArgs'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(EloBuddy.AttackableUnit)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\EventData" File="BeforeOrbwalkerAttack.cs" Line="26">'BeforeOrbwalkerAttack.BeforeOrbwalkerAttack(AttackableUnit)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CancelAttack" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BeforeOrbwalkerAttack.CancelAttack' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Target" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'BeforeOrbwalkerAttack.Target' or change the field to one that is an immutable reference type. If the reference type 'AttackableUnit' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BeforeOrbwalkerAttack.Target' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CheckPerformedEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Version,System.Version,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="git" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\EventData" File="CheckPerformedEventArgs.cs" Line="69">In method 'CheckPerformedEventArgs.CheckPerformedEventArgs(Version, Version, string)', correct the spelling of 'git' in parameter name 'gitVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GitVersion" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CheckPerformedEventArgs.GitVersion' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Git" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Git' in member name 'CheckPerformedEventArgs.GitVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LocalVersion" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CheckPerformedEventArgs.LocalVersion' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MessageLanguage" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CheckPerformedEventArgs.MessageLanguage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StatusMessage" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_StatusMessage()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\EventData" File="CheckPerformedEventArgs.cs" Line="51">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CheckPerformedEventArgs.StatusMessage.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\EventData" File="CheckPerformedEventArgs.cs" Line="51">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CheckPerformedEventArgs.StatusMessage.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\EventData" File="CheckPerformedEventArgs.cs" Line="51">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CheckPerformedEventArgs.StatusMessage.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="GameUpdateEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(SparkTech.SDK.Enumerations.Orbwalker,SparkTech.SDK.Enumerations.Mode)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\EventData" File="GameUpdateEventArgs.cs" Line="22">'GameUpdateEventArgs.GameUpdateEventArgs(Orbwalker, Mode)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Orbwalker" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GameUpdateEventArgs.Orbwalker' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Orbwalker" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Orbwalker' in member name 'GameUpdateEventArgs.Orbwalker' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrbwalkingMode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GameUpdateEventArgs.OrbwalkingMode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Orbwalking" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Orbwalking' in member name 'GameUpdateEventArgs.OrbwalkingMode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UnkillableMinionsEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Unkillable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Unkillable' in type name 'UnkillableMinionsEventArgs'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.List`1&lt;EloBuddy.Obj_AI_Minion&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\EventData" File="UnkillableMinionsEventArgs.cs" Line="22">Change 'List&lt;Obj_AI_Minion&gt;' in 'UnkillableMinionsEventArgs.UnkillableMinionsEventArgs(List&lt;Obj_AI_Minion&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Minions" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'UnkillableMinionsEventArgs.Minions' or change the field to one that is an immutable reference type. If the reference type 'List&lt;Obj_AI_Minion&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UnkillableMinionsEventArgs.Minions' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;Obj_AI_Minion&gt;' in 'UnkillableMinionsEventArgs.Minions' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SparkTech.SDK.Executors">
       <Types>
        <Type Name="Bootstrap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Executors" File="Bootstrap.cs" Line="25">Initialize all static fields in 'Bootstrap' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Handle(System.String[],System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Executors" File="Bootstrap.cs" Line="38">In externally visible method 'Bootstrap.Handle(this string[], Type)', validate parameter 'bootstrapLinkType' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Executable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Log(System.Exception)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Executors" File="Executable.cs" Line="57">In externally visible method 'Executable.Log(Exception)', validate parameter 'ex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.IDisposable.Dispose()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Executors" File="Executable.cs" Line="35">Modify 'Executable.IDisposable.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="RenameDispose" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Executors" File="Executable.cs" Line="35">Rename 'Executable.IDisposable.Dispose()' to 'Dispose' and ensure that it is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TriggerAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'TriggerAttribute', if possible.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SparkTech.SDK.SparkWalking">
       <Types>
        <Type Name="PetWalker" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'PetWalker' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Comparison(EloBuddy.Obj_AI_Base)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="PetWalker.cs" Line="30">In externally visible method 'PetWalker.Comparison(Obj_AI_Base)', validate parameter 'base' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SoldierManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SoldierManager.cs" Line="33">Initialize all static fields in 'SoldierManager' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSoldiers(EloBuddy.AIHeroClient,EloBuddy.Obj_AI_Base)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SoldierManager.cs" Line="71">Change 'List&lt;Obj_AI_Minion&gt;' in 'SoldierManager.GetSoldiers(this AIHeroClient, Obj_AI_Base)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SoldierManager.cs" Line="72">In externally visible method 'SoldierManager.GetSoldiers(this AIHeroClient, Obj_AI_Base)', validate parameter 'source' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSoldiers(EloBuddy.Obj_AI_Base,SparkTech.SDK.Utils.ObjectTracker`1&lt;EloBuddy.Obj_AI_Minion&gt;,SharpDX.Vector3)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SoldierManager.cs" Line="84">Change 'List&lt;Obj_AI_Minion&gt;' in 'SoldierManager.GetSoldiers(Obj_AI_Base, ObjectTracker&lt;Obj_AI_Minion&gt;, Vector3)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Pos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SoldierManager.cs" Line="84">In method 'SoldierManager.GetSoldiers(Obj_AI_Base, ObjectTracker&lt;Obj_AI_Minion&gt;, Vector3)', correct the spelling of 'Pos' in parameter name 'ownerPos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SoldierManager.cs" Line="118">In externally visible method 'SoldierManager.GetSoldiers(Obj_AI_Base, ObjectTracker&lt;Obj_AI_Minion&gt;, Vector3)', validate parameter 'tracker' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTracker(EloBuddy.AIHeroClient)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SoldierManager.cs" Line="50">Consider changing the type of parameter 'hero' in 'SoldierManager.GetTracker(AIHeroClient)' from 'AIHeroClient' to its base type 'GameObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SoldierManager.cs" Line="51">In externally visible method 'SoldierManager.GetTracker(AIHeroClient)', validate parameter 'hero' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SparkWalker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'SparkWalker' is coupled with 87 different types from 21 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="661">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SparkWalker.SparkWalker()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Attacks" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SparkWalker.Attacks' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CanAttack(SparkTech.SDK.Enumerations.Mode)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1155">'SparkWalker.CanAttack(Mode)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CanMove()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1273">'SparkWalker.CanMove()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Comparison(EloBuddy.Obj_AI_Base)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="base" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="490">In virtual/interface member 'SparkWalker.Comparison(Obj_AI_Base)', rename parameter 'base' so that it no longer conflicts with the reserved language keyword 'base'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DefaultCustomMode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SparkWalker.DefaultCustomMode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Drawing" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="547">The 'this' parameter (or 'Me' in Visual Basic) of 'SparkWalker.Drawing' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAttackableObject()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1372">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SparkWalker.GetAttackableObject()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAttackRange(EloBuddy.Obj_AI_Base)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="995">Consider changing the type of parameter 'target' in 'SparkWalker.GetAttackRange(Obj_AI_Base)' from 'Obj_AI_Base' to its base type 'GameObject'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1001">In externally visible method 'SparkWalker.GetAttackRange(Obj_AI_Base)', validate parameter 'target' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHero()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1461">The 'this' parameter (or 'Me' in Visual Basic) of 'SparkWalker.GetHero()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetKillableMinion(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1386">The 'this' parameter (or 'Me' in Visual Basic) of 'SparkWalker.GetKillableMinion(bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="freeze" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1386">Parameter 'freeze' of 'SparkWalker.GetKillableMinion(bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InAttackRange(EloBuddy.AttackableUnit)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1132">In externally visible method 'SparkWalker.InAttackRange(AttackableUnit)', validate parameter 'target' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InPossibleRange(EloBuddy.Obj_AI_Base)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="482">In externally visible method 'SparkWalker.InPossibleRange(Obj_AI_Base)', validate parameter 'unit' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsReset(EloBuddy.GameObjectProcessSpellCastEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="472">In externally visible method 'SparkWalker.IsReset(GameObjectProcessSpellCastEventArgs)', validate parameter 'args' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Keybinds" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SparkWalker.Keybinds' or change the field to one that is an immutable reference type. If the reference type 'Menu' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message Id="Keybinds" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Keybinds' in member name 'SparkWalker.Keybinds' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#KillHits(EloBuddy.Obj_AI_Base)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1028">In externally visible method 'SparkWalker.KillHits(Obj_AI_Base)', validate parameter 'target' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LastAttackStartingT" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_LastAttackStartingT(System.Single)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="353">'SparkWalker.LastAttackStartingT.set(float)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Menu" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SparkWalker.Menu' or change the field to one that is an immutable reference type. If the reference type 'Menu' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Misc" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SparkWalker.Misc' or change the field to one that is an immutable reference type. If the reference type 'Menu' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Mode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Mode()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="621">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SparkWalker.Mode.get()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ModeConfiguration" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SparkWalker.ModeConfiguration' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ModeMenu" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SparkWalker.ModeMenu' or change the field to one that is an immutable reference type. If the reference type 'Dictionary&lt;Mode, Menu&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Movement" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SparkWalker.Movement' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnBasicAttack(EloBuddy.Obj_AI_Base,EloBuddy.GameObjectProcessSpellCastEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="442">'SparkWalker.OnBasicAttack(Obj_AI_Base, GameObjectProcessSpellCastEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="args" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="442">Parameter 'args' of 'SparkWalker.OnBasicAttack(Obj_AI_Base, GameObjectProcessSpellCastEventArgs)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnBuffGain(EloBuddy.Obj_AI_Base,EloBuddy.Obj_AI_BaseBuffGainEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="427">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SparkWalker.OnBuffGain(Obj_AI_Base, Obj_AI_BaseBuffGainEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Random" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SparkWalker.Random' or change the field to one that is an immutable reference type. If the reference type 'Random' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Scanner" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SparkWalker.Scanner' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Targeting" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SparkWalker.Targeting' or change the field to one that is an immutable reference type. If the reference type 'Menu' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimeToAttack(System.Nullable`1&lt;SparkTech.SDK.Enumerations.Mode&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\SparkWalking" File="SparkWalker.cs" Line="1262">Replace method 'SparkWalker.TimeToAttack(Mode?)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AfterAttack" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'EventDataHandler&lt;AfterAttackEventArgs&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'EventDataHandler&lt;AfterAttackEventArgs&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="EventsShouldNotHaveBeforeOrAfterPrefix" Category="Microsoft.Naming" CheckId="CA1713" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="After" Certainty="90" Level="Error">Replace 'SparkWalker.AfterAttack' with a past tense version of the event name.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'EventDataHandler&lt;AfterAttackEventArgs&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BeforeOrbwalkerAttack" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'EventDataHandler&lt;BeforeOrbwalkerAttack&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'EventDataHandler&lt;BeforeOrbwalkerAttack&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="EventsShouldNotHaveBeforeOrAfterPrefix" Category="Microsoft.Naming" CheckId="CA1713" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Before" Certainty="90" Level="Error">Replace 'SparkWalker.BeforeOrbwalkerAttack' with a present tense version of the event name.</Issue>
            </Message>
            <Message Id="Orbwalker" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Orbwalker' in member name 'SparkWalker.BeforeOrbwalkerAttack' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'EventDataHandler&lt;BeforeOrbwalkerAttack&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnkillableMinions" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'EventDataHandler&lt;UnkillableMinionsEventArgs&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'EventDataHandler&lt;UnkillableMinionsEventArgs&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message Id="Unkillable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Unkillable' in member name 'SparkWalker.UnkillableMinions' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'EventDataHandler&lt;UnkillableMinionsEventArgs&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SparkWalker+ModeConfig" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Key" Kind="Field" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SparkWalker.ModeConfig.Key' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SparkWalker+ObjectInfo" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#AddToMenu" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SparkWalker.ObjectInfo.AddToMenu' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AttackByDefault" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SparkWalker.ObjectInfo.AttackByDefault' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisplayName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SparkWalker.ObjectInfo.DisplayName' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TargetData" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ShouldWait" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TargetData.ShouldWait' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Target" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'TargetData.Target' or change the field to one that is an immutable reference type. If the reference type 'AttackableUnit' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TargetData.Target' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SparkTech.SDK.Utils">
       <Types>
        <Type Name="Comms" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Comms" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Comms' in type name 'Comms'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Comms.cs" Line="9">Initialize all static fields in 'Comms' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Print(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="message" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Comms.cs" Line="14">Parameter 'message' of 'Comms.Print(string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Converters" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Root(System.Double,System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Converters.cs" Line="28">Replace method 'Converters.Root(this double, double)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Extensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ChampionName(EloBuddy.AIHeroClient)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Extensions.cs" Line="27">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Extensions.ChampionName(this AIHeroClient)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Extensions.cs" Line="25">In externally visible method 'Extensions.ChampionName(this AIHeroClient)', validate parameter 'hero' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remove(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Extensions.cs" Line="78">In member 'Extensions.Remove(this string, string)', consider replacing the data type identifier 'string' in parameter name 'string' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Extensions.cs" Line="79">In externally visible method 'Extensions.Remove(this string, string)', validate parameter 'string' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Space(System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Extensions.cs" Line="65">Replace method 'Extensions.Space(this string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToMenuUse(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Extensions.cs" Line="89">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Extensions.ToMenuUse(this string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UniqueName(EloBuddy.AIHeroClient)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Extensions.cs" Line="55">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Extensions.UniqueName(this AIHeroClient)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Extensions.cs" Line="55">In externally visible method 'Extensions.UniqueName(this AIHeroClient)', validate parameter 'hero' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MenuExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Bool(EloBuddy.SDK.Menu.Values.ValueBase)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bool" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="MenuExtensions.cs" Line="23">Consider replacing the language-specific data type identifier 'Bool' in member name 'MenuExtensions.Bool(this ValueBase)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Minion" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DetermineType(EloBuddy.Obj_AI_Minion)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Minion.cs" Line="50">Consider changing the type of parameter 'minion' in 'Minion.DetermineType(this Obj_AI_Minion)' from 'Obj_AI_Minion' to its base type 'Obj_AI_Base'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Minion.cs" Line="70">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Minion.DetermineType(this Obj_AI_Minion)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Minion.cs" Line="53">In externally visible method 'Minion.DetermineType(this Obj_AI_Minion)', validate parameter 'minion' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsJungleBuff(EloBuddy.Obj_AI_Minion)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Minion.cs" Line="14">Consider changing the type of parameter 'minion' in 'Minion.IsJungleBuff(this Obj_AI_Minion)' from 'Obj_AI_Minion' to its base type 'Obj_AI_Base'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Minion.cs" Line="15">In externally visible method 'Minion.IsJungleBuff(this Obj_AI_Minion)', validate parameter 'minion' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectText" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'ObjectText' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="ObjectText.cs" Line="38">Initialize all static fields in 'ObjectText' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="ObjectText.cs" Line="51">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ObjectText.ObjectText()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddItem(SparkTech.SDK.Utils.ObjectTextEntry)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="ObjectText.cs" Line="91">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ObjectText.AddItem(ObjectTextEntry)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="ObjectText.cs" Line="91">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ObjectText.AddItem(ObjectTextEntry)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ObjectText.AddItem(ObjectTextEntry)', validate parameter 'item' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveItem(SparkTech.SDK.Utils.ObjectTextEntry)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="ObjectText.cs" Line="102">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ObjectText.RemoveItem(ObjectTextEntry)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ObjectText.RemoveItem(ObjectTextEntry)', validate parameter 'item' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectTextEntry" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Predicate`1&lt;EloBuddy.GameObject&gt;,System.Func`2&lt;EloBuddy.GameObject,System.Drawing.Color&gt;,SparkTech.SDK.Predicate,System.Func`2&lt;EloBuddy.GameObject,System.String&gt;,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="ObjectTextEntry.cs" Line="62">Replace method 'ObjectTextEntry.ObjectTextEntry(Predicate&lt;GameObject&gt;, Func&lt;GameObject, Color&gt;, Predicate, Func&lt;GameObject, string&gt;, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Color" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ObjectTextEntry.Color' or change the field to one that is an immutable reference type. If the reference type 'Func&lt;GameObject, Color&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObjectTextEntry.Color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Condition" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ObjectTextEntry.Condition' or change the field to one that is an immutable reference type. If the reference type 'Predicate' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObjectTextEntry.Condition' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Draw" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ObjectTextEntry.Draw' or change the field to one that is an immutable reference type. If the reference type 'Predicate&lt;GameObject&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObjectTextEntry.Draw' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawnText" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ObjectTextEntry.DrawnText' or change the field to one that is an immutable reference type. If the reference type 'Func&lt;GameObject, string&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObjectTextEntry.DrawnText' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObjectTextEntry.Id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MenuText" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObjectTextEntry.MenuText' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnByDefault" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObjectTextEntry.OnByDefault' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectTracker`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.Nullable`1&lt;System.Int32&gt;,System.StringComparison)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="ObjectTracker.cs" Line="25">Replace method 'ObjectTracker&lt;T&gt;.ObjectTracker(string, string, int?, StringComparison)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Items" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ObjectTracker&lt;T&gt;.Items' or change the field to one that is an immutable reference type. If the reference type 'List&lt;T&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObjectTracker&lt;T&gt;.Items' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;T&gt;' in 'ObjectTracker&lt;T&gt;.Items' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Created" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Action&lt;T&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Action&lt;T&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'Action&lt;T&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Deleted" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Action&lt;T&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Action&lt;T&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'Action&lt;T&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Randomizer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Randomizer.Instance' or change the field to one that is an immutable reference type. If the reference type 'Random' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NextBool()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bool" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="Randomizer.cs" Line="49">Consider replacing the language-specific data type identifier 'Bool' in member name 'Randomizer.NextBool()' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TickOperation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="TickOperation.cs" Line="20">Initialize all static fields in 'TickOperation' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Active" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TickOperation.Active' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Execute()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="TickOperation.cs" Line="128">Modify 'TickOperation.Execute()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteOnNextTick(System.Action)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Utils" File="TickOperation.cs" Line="61">Modify 'TickOperation.ExecuteOnNextTick(Action)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TickDelay" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TickOperation.TickDelay' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SparkTech.SDK.Web">
       <Types>
        <Type Name="SparkTechUpdater" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Version,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Web" File="SparkTechUpdater.cs" Line="21">Replace method 'SparkTechUpdater.SparkTechUpdater(Version, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Updater" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsLinkValid" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Updater.IsLinkValid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Link" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Updater.Link' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RaiseEvent(System.Version,System.Version,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="git" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Web" File="Updater.cs" Line="38">In method 'Updater.RaiseEvent(Version, Version, string)', correct the spelling of 'git' in parameter name 'gitVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Web" File="Updater.cs" Line="38">Consider making 'Updater.RaiseEvent(Version, Version, string)' an event.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckPerformed" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'EventDataHandler&lt;CheckPerformedEventArgs&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'EventDataHandler&lt;CheckPerformedEventArgs&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'EventDataHandler&lt;CheckPerformedEventArgs&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Utility" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AssemblyInfoValidation(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Web" File="Utility.cs" Line="50">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Utility.AssemblyInfoValidation(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsLinkValid(System.String,System.Uri&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Web" File="Utility.cs" Line="17">Consider a design that does not require that 'uri' be an out parameter.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-29 11:33:51Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="G:\Wszystko\Projects\SparkTech\SparkTech.SDK\Web" File="Utility.cs" Line="24">In externally visible method 'Utility.IsLinkValid(string, out Uri)', validate local variable ''(*uri)'', which was reassigned from parameter 'uri', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Type">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
   <Name>Avoid unsealed attributes</Name>
   <Description>Seal attribute types for improved performance. Sealing attribute types speeds up performance during reflection on custom attributes.</Description>
   <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182267.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="securityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000">
   <Name>Do not declare static members on generic types</Name>
   <Description>The syntax for calling static members on generic types is complex as the type parameter has to be specified for each call.</Description>
   <Resolution Name="Default">Remove {0} from {1} or make it an instance member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182139.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>Do not raise exceptions in unexpected locations</Name>
   <Description>Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</Description>
   <Resolution Name="NoAllowedExceptions">{0} creates an exception of type {1}. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="EventsShouldNotHaveBeforeOrAfterPrefix" Category="Microsoft.Naming" CheckId="CA1713">
   <Name>Events should not have before or after prefix</Name>
   <Description>Use present and past tense for pre-events and post-events, instead of using 'Before' and 'After'. For example, use Closing and Closed rather than BeforeClose and AfterClose.</Description>
   <Resolution Name="After">Replace {0} with a past tense version of the event name.</Resolution>
   <Resolution Name="Before">Replace {0} with a present tense version of the event name.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182238.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714">
   <Name>Flags enums should have plural names</Name>
   <Description>An enumeration marked with FlagsAttribute should have a plural name.</Description>
   <Resolution Name="Default">If enumeration name {0} is singular, change it to a plural form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="MemberParameter">In virtual/interface member {0}, rename parameter {1} so that it no longer conflicts with the reserved language keyword '{2}'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="RenameDispose">Rename {0} to 'Dispose' and ensure that it is declared as public and sealed.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>Initialize reference type static fields inline</Name>
   <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
   <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030">
   <Name>Use events where appropriate</Name>
   <Description>A method name suggestive of event functionality was encountered.</Description>
   <Resolution Name="Default">Consider making {0} an event.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182177.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Resolution Name="Reassigned">In externally visible method {0}, validate local variable '{1}', which was reassigned from parameter '{2}', before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
